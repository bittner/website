<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom"><title type="text">NixOS Asia Blog</title><id>https://nixos.asia</id><updated>2023-09-08</updated><link href="https://nixos.asia/en/blog" rel="alternate"/><link href="https://nixos.asia/en/blog.xml" rel="self"/><entry><id>en/blog/nixify-haskell-project-intro</id><title type="text">Nixify your haskell project: Introduction</title><updated>2023-09-08</updated><link href="https://nixos.asia/en/blog/nixify-haskell-project-intro" rel="alternate"/><summary type="text">This is the start of a series of blog posts aimed at simplifying [[haskell]] development &amp; packaging workflow using [[nix]]. In this post, we begin the series by nixifying a Haskell application that uses PostgreSQL database and package it for end-users to run with one command.</summary></entry><entry><id>en/blog/nix-rapid</id><title type="text">Rapid Introduction to Nix</title><updated>2023-03-01</updated><link href="https://nixos.asia/en/blog/nix-rapid" rel="alternate"/><summary type="text">The goal of this mini-tutorial is to introduce you to [[nix]] as quickly as possible while also preparing the motivated learner to dive deeper into the whole Nix ecosystem. At the end of this introduction, you will be able to create a flakeflake for building a package and providing a developer environment shell.</summary></entry></feed>